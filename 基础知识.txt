- HashMap #
	- put
	- get
	- remove
	- resize
	- rehash
- 红黑树 #
	- 自平衡的二叉搜索树
	- 五条性质
	- 左旋
	- 优选
- ConcurrentHashMap
- synchronize #
	- MonitorObject
	- 重量级锁、悲观锁
	- MarkWord
	- 是否偏向/锁标识
- volatile #
	- 提醒JVM该值有可能被并发修改，因此总是去存储地址取值
- lock #
	- local
	- unlock
- Condition #
	- await
	- signal
	- signalAll
- ReentrantLock
	- sync
		- fairsync
		- nonfairsync
	- newCondition
	- tryLock
	- 重入性
- ArrayBlockingQueue
	- 循环队列
	- 一个锁两个条件
	- put
	- take
	- removeAt
- LinkedBlockingQueue
	- 锁分离，两个锁，两个条件
	- 底层链表
- ThreadLocal
	- ThreadLocalMap
	- get
	- set
- IO
- NIO
- 线程
	- 线程的六个状态
	- 状态之间的转换
- ThreadPool
- JVM类加载 #
	- 启动类加载器
	- 扩展类加载器
	- 应用程序类加载器
	- 自定义类加载器
- JVM GC算法 #
	- 标记-清理
	- 复制
	- 标记-整理
	- 分代收集
- JVM GC器
	- Serial/ParaNew/Parallel Scaverage
	- Serial Old/Parallel Old/CMS
	- G1
- JVM内存结构
	- 堆
		- 老年代
		- 新生代
			- Eden
			- survivor
				- from survivor
				- to survivor
	- 栈
		- 本地方法栈
		- Java方法栈
	- 方法区
- Java 内存模型
	- 主内存(线程安全)
	- 工作内存
		- 线程栈
- JVM Old GC 查错
	- 
- B+树
	- 数据全部存储在叶子节点
- 高性能mysql，数据库数据是怎么存储的，最左匹配原则
	- B+树
	- 匹配从做开始
	- 索引
- 事务，事务隔离性，索引（B+树，为什么是B+树）
	- ACID. atomicity, consistency,isolation,durability
	- isolation
		- 读未提交
		- 读提交（脏读问题）
		- 重复读（不可重复读问题）
		- 序列化（幻读问题）
- Hibernate 原理
	- 一级缓存，session
	- 二级缓存，sessionFactory
	- 查询缓存，sessionfactory
- mybatis 原理
	- 一级缓存，sqlsession
	- 二级缓存，sqlsessionfactory
	- sqlSession,executor,perpetual,hashmap
- redis 原理
- redis setnx
	- 尝试设置key/value，如果key存在则失败
- Bean的生命周期
	- Bean实例化
	- 将Bean的引用注入对应的属性
	- 实现了BeanNameAware接口，则setBeanName
	- 实现了BeanFactoryAware接口，则setBeanFactory
	- 实现了ApplicationContextAware接口，则setApplicationContext
	- 实现了PostProcessor接口，则调用postProcessorBeforeInitialization
	- 实现了InitializingBean接口，则调用afterPropertySet
	- 如果配置了自定义的初始化方法，就执行该方法
	- 实现了PostProcessor接口，则调用postProcessorAfterInitialization
- Spring的循环引用
	- singleton，有无参构造就行
	- 其他scope，不行
- BeanFactory和FactoryBean
	- BeanFactory，Spring最顶层的类
	- FactoryBean，管理普通的Bean，但是本身也是一个Bean
- Spring MVC原理
	- DispatchServlet
	- HandleMapping
	- Controller
	- ModelAndView
	- ViewResolver
	- View
- Spring AOP
	- JDK动态代理
	- cglib
	- asm
	- 反射
- RPC的原理
	- 序列化
	- 动态代理
	- 服务发布
	- hadoop
	- 请求消息结构体和响应消息结构体
- MQ的原理
- Hadoop原理
- Zookeeper的原理
- 数据一致性算法（https://blog.csdn.net/u010039929/article/details/70171672）
- 现在的项目架构
	- spring+springmvc+hibernate+activemq+ehcache+cxf+postgresql
- 常见算法
	- 快排
	- 冒泡
- 设计模式
- ehcache
	- 底层采用LinkedHashMap存取数据
	- 三种清空数据策略：FIFO/LFU/LRU